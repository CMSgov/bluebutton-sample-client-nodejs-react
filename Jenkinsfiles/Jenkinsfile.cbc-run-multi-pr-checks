pipeline {
  agent {
    kubernetes {
      defaultContainer "bb2-node-js-react-sample-app-cbc-build"
      yamlFile "Jenkinsfiles/cbc-pod-deployment-config.yaml"
    }
  }

  environment {
    ENABLE_LINTER = false
  }

  parameters {
    booleanParam(
        name: 'RUN_SELENIUM_TESTS', 
        defaultValue: false, 
        description: 'Set to true, selenium tests will be run as part of tests'
    )
  }

  stages {
    stage("YARN INSTALL SERVER") {
      steps {
        sh """
          python -m venv venv
          . venv/bin/activate
          make reqs-install-dev
          pip install selenium
        """
      }
    }

    stage("YARN INSTALL CLIENT") {
      steps {
        sh """
          python -m venv venv
          . venv/bin/activate
          make reqs-install-dev
          pip install selenium
        """
      }
    }

    stage("ESLint server") {
      steps{
        sh """
          . venv/bin/activate
          flake8
        """
      }
    }

    stage("ESLint client") {
      steps{
        sh """
          . venv/bin/activate
          flake8
        """
      }
    }

    stage("START BB2 server in background") {
       when {
        expression { params.RUN_SELENIUM_TESTS == true }
       }
       steps{
        sh """
          . venv/bin/activate
          python manage.py migrate && python manage.py create_admin_groups && python manage.py loaddata scopes.json && python manage.py create_blue_button_scopes && python manage.py create_test_user_and_application && python manage.py create_user_identification_label_selection && python manage.py create_test_feature_switches && (if [ ! -d 'bluebutton-css' ] ; then git clone https://github.com/CMSgov/bluebutton-css.git ; else echo 'CSS already installed.' ; fi) && echo 'starting bb2...' && (export DJANGO_SETTINGS_MODULE=hhs_oauth_server.settings.logging_it && python manage.py runserver 0.0.0.0:8000 &)
        """
       }
    }

    stage("RUN logging integration tests") {
       when {
        expression { params.RUN_SELENIUM_TESTS == true }
       }
       steps{
        sh """
          . venv/bin/activate
          python runtests.py --selenium apps.integration_tests.logging_tests.LoggingTests.test_auth_fhir_flows_logging
        """
       }
    }

    stage("RUN integration tests") {
      steps{
        sh """
          . venv/bin/activate
          python runtests.py --integration apps.integration_tests.integration_test_fhir_resources.IntegrationTestFhirApiResources
        """
      }
    }

    stage("RUN selenium tests") {
       when {
        expression { params.RUN_SELENIUM_TESTS == true }
       }
       steps{
        sh """
          . venv/bin/activate
          python runtests.py --selenium apps.integration_tests.selenium_tests.SeleniumTests
        """
       }
    }

  }
}
