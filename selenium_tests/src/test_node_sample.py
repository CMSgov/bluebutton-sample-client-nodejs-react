# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestNodeSampleApp():
    def setup_method(self, method):
        print("Waiting 20 sec. ======================================>>>>>>>>>")
        time.sleep(20)
        print("Waited 20 sec. <<<<<<<<<<<<<<<================================")

        opt = webdriver.ChromeOptions()
        opt.add_argument("--disable-dev-shm-usage")
        opt.add_argument("--disable-web-security")
        opt.add_argument("--allow-running-insecure-content")
        opt.add_argument("--no-sandbox")
        opt.add_argument("--disable-setuid-sandbox")
        opt.add_argument("--disable-webgl")
        opt.add_argument("--disable-popup-blocking")
        opt.add_argument("--enable-javascript")
        opt.add_argument('--allow-insecure-localhost')
        opt.add_argument('--window-size=1920,1080')
        opt.add_argument("--whitelisted-ips=''")

        # opt.add_argument('--headless')
        # self.driver = webdriver.Chrome(options=opt)
        print("Register remote debug driver. ***************************")
        self.driver = webdriver.Remote(
            command_executor='http://chrome:4444/wd/hub', options=opt)

    def teardown_method(self, method):
        self.driver.quit()

    def _find_and_click(self, timeout_sec, by, by_expr, **kwargs):
        elem = WebDriverWait(self.driver, timeout_sec).until(EC.visibility_of_element_located((by, by_expr)))
        assert elem is not None
        elem.click()
        return elem

    def _find_and_sendkey(self, timeout_sec, by, by_expr, txt, **kwargs):
        elem = WebDriverWait(self.driver, timeout_sec).until(EC.visibility_of_element_located((by, by_expr)))
        assert elem is not None
        elem.send_keys(txt)
        return elem

    def test_node_sample_app(self):
        print("In test_node_sample_app(): about to connect to FE at http://client:3000 ...")
        self.driver.get("http://client:3000/")
        print("Connected !")
        print("Set window size to 1500 X 1800 ++++++++++++++")
        self.driver.set_window_size(1500, 1800)
        print("Locate button 'Authorize' and click ===================")
        # 3 | click | id=auth_btn | 
        elem = self._find_and_click(30, By.ID, "auth_btn")
        # self._find_and_click(30, By.ID, "auth_btn")
        print("Wait 10 sec for the bene login page to show up ===================")
        time.sleep(10)
        print("Locate user name input and type user name ===================")
        self._find_and_sendkey(30, By.ID, "username-textbox", "BBUser10000")
        print("Locate password input and type password ===================")
        self._find_and_sendkey(30, By.ID, "password-textbox", "PW10000!")
        print("Locate login button and click ===================")
        self._find_and_click(30, By.ID, "login-button")
        print("Wait 10 sec for access grant page to show up ===================")
        time.sleep(10)
        print("Locate Approve button and click ===================")
        self._find_and_click(30, By.ID, "approve")
        print("Now should be able to see the Claims page ===================")

